// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

generator client {
  provider = "prisma-client-js"
}

model Project {
  id          String    @id @unique @default(cuid())
  title       String    @unique
  description String?
  deadline    DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime?
  client      Client[]
  assets      Asset[]
  staff       Staff[]
}

model Client {
  id         String    @id @unique @default(cuid())
  title      String    @unique
  createdAt  DateTime  @default(now())
  updatedAt  DateTime?
  projects   Project[]
  assets     Asset[]
  staff      Staff[]
  users      User[]
  adminEmail String
}

model User {
  id        String    @id @unique @default(cuid())
  firstName String
  lastName  String
  email     String    @unique
  role      UserRole  @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  authId    String?
  client    Client?   @relation(fields: [clientId], references: [id])
  clientId  String?
}

model Staff {
  id            String        @id @unique @default(cuid())
  firstName     String
  lastName      String
  function      String
  shortBio      String?
  staffCategory StaffCategory
  gender        Gender
  staffTitle    StaffTitle
  projectRole   String
  salary        Int
  createdAt     DateTime      @default(now())
  updatedAt     DateTime?
  cv            String?
  projects      Project[]
  clients       Client[]
}

model Asset {
  id          String      @id @unique @default(cuid())
  title       String
  description String?
  type        AssetType   @default(MEDIA)
  status      AssetStatus @default(EMPTY)
  deadline    DateTime
  createdAt   DateTime    @default(now())
  updatedAt   DateTime?
  url         String?
  fields      Json?
  projectId   String?
  clientId    String?
  project     Project?    @relation(fields: [projectId], references: [id])
  client      Client?     @relation(fields: [clientId], references: [id])
}

enum UserRole {
  USER
  ADMIN
  SUPER_ADMIN
}

enum StaffCategory {
  PHD
}

enum Gender {
  MALE
  FEMALE
  LGPTQ
}

enum StaffTitle {
  MRS
}

enum AssetType {
  MEDIA
  DOCUSIGN
}

enum AssetStatus {
  EMPTY
  WAITING_FOR_APPROVAL
  APPROVED
  REJECT
}
